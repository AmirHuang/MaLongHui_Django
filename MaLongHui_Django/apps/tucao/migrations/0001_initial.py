# Generated by Django 2.1.7 on 2019-04-01 17:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '吐槽评论点赞',
                'verbose_name_plural': '吐槽评论点赞',
                'db_table': 'tb_spit_comment_like',
            },
        ),
        migrations.CreateModel(
            name='Spit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('like_count', models.IntegerField(default=0, verbose_name='点击量')),
                ('content', models.TextField(default='', verbose_name='吐槽内容')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_spit', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '吐槽',
                'verbose_name_plural': '吐槽',
                'db_table': 'tb_spit',
            },
        ),
        migrations.CreateModel(
            name='SpitCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spit_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tucao.Spit', verbose_name='吐槽')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_spit_collection', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '吐槽收藏',
                'verbose_name_plural': '吐槽收藏',
                'db_table': 'tb_spit_collection',
            },
        ),
        migrations.CreateModel(
            name='SpitComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=32)),
                ('like_count', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('spit_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tucao.Spit')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_spit_comment', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '吐槽评论',
                'verbose_name_plural': '吐槽评论',
                'db_table': 'tb_spit_comment',
            },
        ),
        migrations.CreateModel(
            name='SpitLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spit_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tucao.Spit', verbose_name='吐槽')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_spit_like', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '吐槽点赞',
                'verbose_name_plural': '吐槽点赞',
                'db_table': 'tb_spit_like',
            },
        ),
        migrations.AddField(
            model_name='commentlike',
            name='comment_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tucao.SpitComment', verbose_name='评论id'),
        ),
        migrations.AddField(
            model_name='commentlike',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_spit_comment_like', to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
    ]
