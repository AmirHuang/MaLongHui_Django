# Generated by Django 2.1.7 on 2019-03-30 09:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机号')),
                ('residence', models.CharField(blank=True, max_length=30, null=True, verbose_name='居住地')),
                ('schooltag', models.CharField(blank=True, max_length=30, null=True, verbose_name='毕业学校')),
                ('company', models.CharField(blank=True, max_length=30, null=True, verbose_name='所在公司')),
                ('website', models.CharField(blank=True, max_length=30, null=True, verbose_name='个人网站')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='头像')),
                ('real_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='真人姓名')),
                ('gender', models.CharField(blank=True, max_length=10, null=True, verbose_name='性别')),
                ('address', models.CharField(blank=True, max_length=30, null=True, verbose_name='详细地址')),
                ('introduce', models.CharField(blank=True, max_length=50, null=True, verbose_name='个人简介')),
                ('wechat', models.CharField(blank=True, max_length=20, null=True, verbose_name='微信')),
                ('qq_num', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ')),
                ('wei_blog', models.CharField(blank=True, max_length=20, null=True, verbose_name='微博')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='真人头像')),
                ('birthday', models.CharField(blank=True, max_length=20, null=True, verbose_name='生日')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'tb_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserEducationExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('school', models.CharField(blank=True, max_length=30, null=True, verbose_name='学校名称')),
                ('major', models.CharField(blank=True, max_length=20, null=True, verbose_name='专业')),
                ('start_time', models.DateField(verbose_name='开始时间')),
                ('stop_time', models.DateField(verbose_name='结束时间')),
                ('education_level', models.CharField(blank=True, max_length=20, null=True, verbose_name='学历')),
                ('technology', models.CharField(blank=True, max_length=20, null=True, verbose_name='相关技术')),
                ('achievement', models.CharField(blank=True, max_length=20, null=True, verbose_name='取得成就')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_experiences', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '教育',
                'verbose_name_plural': '教育',
                'db_table': 'tb_user_education_experience',
            },
        ),
        migrations.CreateModel(
            name='UserWorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('company', models.CharField(blank=True, max_length=30, null=True, verbose_name='所在公司')),
                ('job', models.CharField(blank=True, max_length=20, null=True, verbose_name='职位')),
                ('start_time', models.DateField(verbose_name='开始时间')),
                ('stop_time', models.DateField(verbose_name='结束时间')),
                ('work_cite', models.CharField(blank=True, max_length=20, null=True, verbose_name='工作城市')),
                ('technology', models.CharField(blank=True, max_length=20, null=True, verbose_name='相关技术')),
                ('describe', models.CharField(blank=True, max_length=30, null=True, verbose_name='职位描述')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '工作经历',
                'verbose_name_plural': '工作经历',
                'db_table': 'tb_user_work_experience',
            },
        ),
    ]
